---
import MenuIcon from "./icons/Menu.astro";
import ChevronLeftIcon from "./icons/ChevronLeft.astro";
const { sections } = Astro.props;
---

<nav class="grid grid-flow-col gap-x-8 place-items-center">
  {
    sections.map(({ title, url }: { title: string; url: string }) => (
      <a
        class="hidden md:block text-lg hover:text-white transition duration-300"
        href={url}
      >
        {title}
      </a>
    ))
  }
  <button id="menuButton" class="hidden z-10">
    <MenuIcon class="textGlow" />
  </button>
</nav>

<aside
  id="sideBar"
  class="fixed top-0 left-0 bg-black w-[110vw] translate-x-[110%] h-screen transition-all opacity-0"
>
  <nav class="grid grid-flow-row bg-black">
    <button
      id="closeSidebar"
      class={`text-xl items-center flex border-b-2 border-white/10 transition py-2 px-4 h-full w-full`}
    >
      <ChevronLeftIcon class="size-6 mr-2" />
      Cerrar
    </button>
    {
      sections.map(
        ({
          title,
          url,
          Icon,
        }: {
          title: string;
          url: string;
          Icon: Function;
        }) => (
          <a
            class={`text-xl items-center flex border-b-2 border-white/10 transition py-2 px-4 h-full w-full`}
            href={url}
          >
            <Icon class="size-6 mr-2" />
            {title}
          </a>
        )
      )
    }
  </nav>
</aside>

<script>
  const menuButton = document.getElementById("menuButton");
  const closeSidebar = document.getElementById("closeSidebar");
  const sideBar = document.getElementById("sideBar");

  menuButton?.addEventListener("click", (e) => {
    e.preventDefault();
    sideBar?.classList.toggle("translate-x-[110%]");
    sideBar?.classList.toggle("opacity-0");
    menuButton?.classList.toggle("opacity-0");
  });
  closeSidebar?.addEventListener("click", (e) => {
    e.preventDefault();
    sideBar?.classList.toggle("translate-x-[110%]");
    sideBar?.classList.toggle("opacity-0");
    menuButton?.classList.toggle("opacity-0");
  });
</script>

<style>
  button {
    filter: drop-shadow(0 0 5px #63e);
  }

  a {
    transition: filter color 0.2s ease-in-out;
  }
  a:hover {
    filter: drop-shadow(0 0 2px #63e);
  }
</style>
